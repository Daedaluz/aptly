# Default values for aptly.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/daedaluz/aptly-api
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# Nginx public deployment image
publicImage:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: alpine

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Persistent Volume Claim for data storage
persistence:
  enabled: true
  accessModes:
    - ReadWriteMany
  size: 20Gi
  storageClass: ""
  annotations: {}

# API service
apiService:
  type: ClusterIP
  port: 8080

# Public service
publicService:
  type: ClusterIP
  port: 80

# HTTPRoute configuration
httpRoute:
  enabled: true
  host: "chart-example.local"
  gatewayName: "gateway"
  gatewayNamespace: "default"
  gatewaySectionName: ""

# GPG key configuration for the API container
# These map to the environment variables used by the Docker image
# GPG_KEY_NAME – Name for generated GPG key (default: CI_CD_Aptly)
# GPG_KEY_EMAIL – Email for generated GPG key (default: ci-cd@localhost)
# GPG_KEY_COMMENT – Comment for generated GPG key (default: Aptly CI/CD Signing Key)
# GPG_KEY – (Optional) ASCII-armored private key to import instead of generating a new one
gpg:
  keyName: "Aptly Default"
  keyEmail: "aptly@localhost"
  keyComment: "Aptly Default Signing Key"
  # key: ""  # Inline ASCII-armored private key (optional)
  keySecretName: ""  # Name of a Kubernetes Secret containing the private key (optional)
  keySecretKey: "gpg-key"  # Key in the Secret data (default: gpg-key)
